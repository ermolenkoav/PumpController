name: linux-x64

on:
  push:
    branches:
      - master
      - dev
    tags:
      - '*.*.*'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Clone repository
        uses: actions/checkout@v3

      - name: install dependencies
        run: sudo apt update && sudo apt install -y cmake ninja-build clang qt6-base-dev libqt6widgets6 libqt6openglwidgets6 libqt6serialport6-dev libpoco-dev libglx-dev

      - name: Install googletest
        shell: bash
        run: |
          git clone https://github.com/google/googletest --depth 1
          cd googletest
          mkdir build && cd build
          if [ '${{runner.os}}' == 'Windows' ]; then
            echo "Ohh, this is on Windows"
            cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX='${{github.workspace}}'/googletest-install -Dgtest_force_shared_crt=ON -G "Visual Studio 16 2019" -A x64
          else
            echo "Yes, this is Linux"
            cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX='${{github.workspace}}'/googletest-install -G Ninja
          fi
          cmake --build . --config ${{env.BUILD_TYPE}} -j 2
          cmake --install . --config ${{env.BUILD_TYPE}}

      - name: CMake configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DGTest_DIR=${{github.workspace}}/googletest-install/lib/cmake/GTest -DCMAKE_MAKE_PROGRAM=ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

      - name: Build
        run: cmake --build build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

      - name: Install
        working-directory: ${{github.workspace}}/build
        run: cmake --install . --config ${{env.BUILD_TYPE}}

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: HelloCpp-${{runner.os}}-x64
          path: ${{github.workspace}}/build/install
